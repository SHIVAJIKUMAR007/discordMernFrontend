{"version":3,"sources":["firebase.js","axios.js","action/massage.js","compo/Chat.jsx","action/index.js","compo/Welcome.jsx","compo/Login.jsx","compo/Sidebar.jsx","compo/App.jsx","serviceWorker.js","reducer/index.js","reducer/auth.js","reducer/massageReducer.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","GoogleAuthProvider","instance","axios","create","baseURL","getMassage","massage","type","payload","Massage","name","picUrl","time","className","Avatar","src","style","fontSize","margin","color","ChatSendMassage","roomId","useParams","useState","massageToSend","setmassageToSend","User","useSelector","state","authReducer","dispatch","useDispatch","sendMassage","e","a","preventDefault","post","pic","photo","massageData","data","massageIs","console","log","method","onSubmit","onChange","target","value","display","ChatHeader","readOnly","Chat","massages","room","setroom","useEffect","get","getRoomName","roomName","fetchMassage","key","map","index","Welcome","height","width","placeItems","Login","alt","onClick","signInWithPopup","catch","alert","SidebarChannel","id","to","textDecoration","Sidebar","Rooms","setRooms","getRooms","allRooms","fetchRooms","addNewChannel","newRoomName","prompt","uid","titleAccess","i","_id","signOut","App","onAuthStateChanged","userLogged","u","displayName","email","photoURL","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","allReducer","combineReducers","action","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","myStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0d643032.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCcVCjjh8oan-sVyyonlvbETby5rDno6Ps\",\r\n  authDomain: \"discord-clone-693f0.firebaseapp.com\",\r\n  databaseURL: \"https://discord-clone-693f0.firebaseio.com\",\r\n  projectId: \"discord-clone-693f0\",\r\n  storageBucket: \"discord-clone-693f0.appspot.com\",\r\n  messagingSenderId: \"1069644443900\",\r\n  appId: \"1:1069644443900:web:38228365b2800d31e32779\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:5000/\",\r\n});\r\n\r\nexport default instance;\r\n","export const getMassage = (massage) => {\r\n  return {\r\n    type: \"GET_ROOM_MASSAGES\",\r\n    payload: massage,\r\n  };\r\n};\r\n\r\nexport const sendMassageToRoom = (massage) => {\r\n  return {\r\n    type: \"SEND_NEW_MASSAGE\",\r\n    payload: massage,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../style/chat.css\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport EditLocationIcon from \"@material-ui/icons/EditLocation\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"../axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isUserSaved } from \"../action\";\r\nimport { getMassage, sendMassageToRoom } from \"../action/massage\";\r\n\r\nfunction Chat() {\r\n  const { roomId } = useParams();\r\n  const massages = useSelector((state) => state.massages);\r\n  const dispatch = useDispatch();\r\n  const [room, setroom] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchMassage = async () => {\r\n      // get massages\r\n      const massage = await axios.get(\"/api/chat/\" + roomId);\r\n      const massages = await massage.data;\r\n      dispatch(getMassage(massages));\r\n      // get roomName\r\n      const getRoomName = await axios.get(\"/api/getRoomName/\" + roomId);\r\n      const roomName = await getRoomName.data[0].name;\r\n      setroom(roomName);\r\n    };\r\n\r\n    fetchMassage();\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatHeader key=\"1\" name={room} />\r\n\r\n      <div className=\"mainChatBody\">\r\n        {massages?.map((massage, index) => (\r\n          <Massage\r\n            key={index}\r\n            name={massage.name}\r\n            picUrl={massage.pic}\r\n            massage={massage.massage}\r\n            time={massage.time}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <ChatSendMassage />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Massage = ({ name, picUrl, massage, time }) => {\r\n  return (\r\n    <>\r\n      <div className=\"chatMassage\">\r\n        <Avatar className=\"massageAvatar\" src={picUrl} />\r\n        <div className=\"massageChat\">\r\n          <p style={{ fontSize: \"small\", margin: \"0\", color: \"white\" }}>\r\n            {name}\r\n          </p>\r\n          <p style={{ color: \"white\" }}>{massage} </p>\r\n        </div>\r\n        <p style={{ fontSize: \"x-small\", color: \"white\" }}>{time}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChatSendMassage = () => {\r\n  const { roomId } = useParams();\r\n  const [massageToSend, setmassageToSend] = useState(\"\");\r\n  const User = useSelector((state) => state.authReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const sendMassage = async (e) => {\r\n    e.preventDefault(); // not refresh\r\n    dispatch(isUserSaved()); // get user data\r\n    // dispatch massage data\r\n    const massageData = await axios.post(\"/api/chat/\" + roomId, {\r\n      name: User.name,\r\n      massage: massageToSend,\r\n      pic: User.photo,\r\n    });\r\n    const massageIs = await massageData.data;\r\n    console.log(massageIs);\r\n    dispatch(sendMassageToRoom(massageIs));\r\n\r\n    setmassageToSend(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"sendingTools\">\r\n        <MicIcon className=\"sendingToolsIcon\" />\r\n\r\n        <div className=\"chatSendMassage\">\r\n          <form method=\"post\" onSubmit={sendMassage}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              onChange={(e) => setmassageToSend(e.target.value)}\r\n              value={massageToSend}\r\n            />\r\n            <button type=\"submit\" style={{ display: \"none\" }}></button>\r\n          </form>\r\n        </div>\r\n\r\n        <AttachFileIcon className=\"sendingToolsIcon\" />\r\n        <SendIcon className=\"sendingToolsIcon\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChatHeader = ({ name }) => {\r\n  return (\r\n    <>\r\n      <div className=\"chatHeader\">\r\n        <h1 className=\"headerName\">\r\n          <span>#</span>\r\n          {name}\r\n        </h1>\r\n\r\n        <div className=\"iconsDiv\">\r\n          <NotificationsIcon className=\"originalIcon\" />\r\n          <EditLocationIcon className=\"originalIcon\" />\r\n          <PeopleAltIcon className=\"originalIcon\" />\r\n\r\n          <div className=\"chatHeaderSearch\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              onChange={(e) => console.log(e.target.value)}\r\n              readOnly\r\n            />\r\n            <SearchIcon />\r\n          </div>\r\n\r\n          <SendIcon className=\"originalIcon\" />\r\n          <HelpIcon className=\"originalIcon\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","export const login = (user) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};\r\n\r\nexport const isUserSaved = () => {\r\n  return { type: \"IS_USER_SAVED\" };\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nfunction Welcome() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ color: \"white\" }}>\r\n        <h1>Welcome to Discord</h1>\r\n        <center>\r\n          <h3>For What You Waiting For</h3>\r\n          <h3>start chatting</h3>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport { auth, provider } from \"../firebase\";\r\n\r\nfunction Login() {\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).catch((e) => alert(e));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"center\">\r\n        <div className=\"logoImage\">\r\n          <img\r\n            src=\"https://www.pngkit.com/png/full/19-191133_discord-logo-png-transparent-graphic-discord.png\"\r\n            alt=\"djfs\"\r\n          />\r\n        </div>\r\n        <button onClick={signIn}>Sign In With Google</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../style/sidebar.css\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { auth } from \"../firebase\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isUserSaved, logout } from \"../action\";\r\nimport axios from \"../axios\";\r\n\r\nfunction Sidebar() {\r\n  const User = useSelector((state) => state.authReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const [Rooms, setRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      // get all rooms\r\n      const getRooms = await axios.get(\"/api/allChannels\");\r\n      const allRooms = await getRooms.data;\r\n      setRooms(allRooms);\r\n    };\r\n    fetchRooms();\r\n\r\n    dispatch(isUserSaved()); // GET USER DATA\r\n  }, [dispatch]);\r\n\r\n  const signOut = () => {\r\n    auth.signOut();\r\n    dispatch(logout());\r\n  };\r\n\r\n  const addNewChannel = async () => {\r\n    const newRoomName = prompt(\"enter the name of the room\");\r\n    console.log(newRoomName);\r\n    const getRooms = await axios.post(\"/api/createRoom/\" + User.uid, {\r\n      name: newRoomName,\r\n    });\r\n    const allRooms = await getRooms.data;\r\n    setRooms(allRooms);\r\n  };\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarTop\">\r\n        <h2> DISCORD</h2> <KeyboardArrowDownIcon />\r\n      </div>\r\n\r\n      <div className=\"sidebarChannel\">\r\n        <div className=\"sidebarChannelHeader\">\r\n          <div className=\"channelHeader\">\r\n            <KeyboardArrowDownIcon />\r\n            <h3>Text Chennels</h3>\r\n          </div>\r\n\r\n          <AddIcon\r\n            className=\"addIcon\"\r\n            onClick={addNewChannel}\r\n            titleAccess=\"add new channel\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"channelList\">\r\n          {Rooms?.map((room, i) => (\r\n            <SidebarChannel key={i} id={room._id} name={room.name} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebarVoice\">\r\n        <SignalCellularAltIcon className=\"voiceIcon\" />\r\n        <div className=\"voiceInfo\">\r\n          <h3>Voice Connected</h3>\r\n          <p>Stream</p>\r\n        </div>\r\n\r\n        <div className=\"rightIcons\">\r\n          <InfoIcon />\r\n          <CallIcon />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebarProfile\">\r\n        <Avatar\r\n          onClick={signOut}\r\n          src={User?.photo}\r\n          className=\"avatar\"\r\n          fontSize=\"larger\"\r\n        />\r\n        <div className=\"profileInfo\">\r\n          <h3>@{User?.name}</h3>\r\n          <p>#{User?.uid}</p>\r\n        </div>\r\n\r\n        <div className=\"profileIcon\">\r\n          <MicNoneIcon />\r\n          <HeadsetIcon />\r\n          <SettingsIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SidebarChannel = ({ id, name }) => {\r\n  return (\r\n    <>\r\n      <NavLink to={`/${id}`} style={{ color: \"grey\", textDecoration: \"none\" }}>\r\n        <div className=\"channel\">\r\n          <h3>\r\n            <span className=\"hash\">#</span>\r\n            {name}\r\n          </h3>\r\n        </div>\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport \"../style/App.css\";\nimport Chat from \"./Chat\";\nimport Welcome from \"./Welcome\";\nimport Login from \"./Login\";\nimport Sidebar from \"./Sidebar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isUserSaved, login, logout } from \"../action\";\n\nfunction App() {\n  const User = useSelector((state) => state.authReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged((userLogged) => {\n      if (userLogged) {\n        dispatch(\n          login({\n            u: true,\n            name: userLogged.displayName,\n            email: userLogged.email,\n            photo: userLogged.photoURL,\n            uid: userLogged.uid,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n\n    dispatch(isUserSaved());\n  }, [dispatch]);\n  return (\n    <div className=\"App\">\n      {User.u ? (\n        <>\n          <Sidebar />\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/:roomId\" component={Chat} />\n          </Switch>\n        </>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { authReducer } from \"./auth\";\r\nimport { massageReducer } from \"./massageReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducer = combineReducers({\r\n  authReducer: authReducer,\r\n  massages: massageReducer,\r\n});\r\n\r\nexport default allReducer;\r\n","export const authReducer = (state = { u: false }, action) => {\r\n  switch (action.type) {\r\n    case \"IS_USER_SAVED\":\r\n      const data = window.localStorage.getItem(\"user\");\r\n      return (state = JSON.parse(data));\r\n    case \"LOGIN\":\r\n      window.localStorage.setItem(\"user\", JSON.stringify(action.payload));\r\n      return (state = action.payload);\r\n\r\n    case \"LOGOUT\":\r\n      window.localStorage.removeItem(\"user\");\r\n      return (state = { u: false });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const massageReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_ROOM_MASSAGES\":\r\n      return (state = action.payload);\r\n    case \"SEND_NEW_MASSAGE\":\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./compo/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport allReducer from \"./reducer\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst myStore = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={myStore}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}